!function(){try{var e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},a=(new Error).stack;a&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[a]="e08a651a-7ab6-48b4-8655-83634f1cf88e",e._sentryDebugIdIdentifier="sentry-dbid-e08a651a-7ab6-48b4-8655-83634f1cf88e")}catch(e){}}();var _global="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};_global.SENTRY_RELEASE={id:"0.92.64"},(self.webpackChunkrabby=self.webpackChunkrabby||[]).push([[770],{99770:(e,a,t)=>{t.r(a),t.d(a,{ccipRequest:()=>k,offchainLookup:()=>m,offchainLookupAbiItem:()=>g,offchainLookupSignature:()=>h});var r=t(47835),s=t(96070),n=t(62027),o=t(38673);class c extends n.G{constructor({callbackSelector:e,cause:a,data:t,extraData:r,sender:s,urls:n}){super(a.shortMessage||"An error occurred while fetching for an offchain result.",{cause:a,metaMessages:[...a.metaMessages||[],a.metaMessages?.length?"":[],"Offchain Gateway Call:",n&&["  Gateway URL(s):",...n.map((e=>`    ${(0,o.Gr)(e)}`))],`  Sender: ${s}`,`  Data: ${t}`,`  Callback selector: ${e}`,`  Extra data: ${r}`].flat()}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupError"})}}class d extends n.G{constructor({result:e,url:a}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${(0,o.Gr)(a)}`,`Response: ${(0,s.P)(e)}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupResponseMalformedError"})}}class l extends n.G{constructor({sender:e,to:a}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${a}`,`OffchainLookup sender address: ${e}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupSenderMismatchError"})}}var u=t(78863),i=t(86899),f=t(45444),b=t(26087),p=t(69952);var y=t(57040),w=t(15102);const h="0x556f1830",g={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function m(e,{blockNumber:a,blockTag:t,data:s,to:n}){const{args:o}=(0,i.p)({data:s,abi:[g]}),[d,u,w,h,m]=o,{ccipRead:E}=e,L=E&&"function"==typeof E?.request?E.request:k;try{if(!function(e,a){if(!(0,p.U)(e,{strict:!1}))throw new b.b({address:e});if(!(0,p.U)(a,{strict:!1}))throw new b.b({address:a});return e.toLowerCase()===a.toLowerCase()}(n,d))throw new l({sender:d,to:n});const s=await L({data:w,sender:d,urls:u}),{data:o}=await(0,r.RE)(e,{blockNumber:a,blockTag:t,data:(0,y.zo)([h,(0,f.E)([{type:"bytes"},{type:"bytes"}],[s,m])]),to:n});return o}catch(e){throw new c({callbackSelector:h,cause:e,data:s,extraData:m,sender:d,urls:u})}}async function k({data:e,sender:a,urls:t}){let r=new Error("An unknown error occurred.");for(let n=0;n<t.length;n++){const o=t[n],c=o.includes("{data}")?"GET":"POST",l="POST"===c?{data:e,sender:a}:void 0;try{const t=await fetch(o.replace("{sender}",a).replace("{data}",e),{body:JSON.stringify(l),method:c});let n;if(n=t.headers.get("Content-Type")?.startsWith("application/json")?(await t.json()).data:await t.text(),!t.ok){r=new u.Gg({body:l,details:n?.error?(0,s.P)(n.error):t.statusText,headers:t.headers,status:t.status,url:o});continue}if(!(0,w.v)(n)){r=new d({result:n,url:o});continue}return n}catch(e){r=new u.Gg({body:l,details:e.message,url:o})}}throw r}}}]);